{"version":3,"sources":["components/Modal.js","ui/Priorities.js","App.js","index.js"],"names":["Modal","setModal","data","console","log","className","onClick","Table","striped","bordered","hover","map","item","idx","summary","key","created","resolution","priority","formattedDate","Date","toLocaleDateString","day","month","year","replace","src","Priorities","App","useState","showModal","setData","specifiedData","setSpecified","value","label","options","selectedOption","state","setState","handleNumberClick","jql","a","fetchData","axios","get","result","useEffect","assignes","Object","entries","name","content","onChange","style","width","length","assigne","statusItems","paddingTop","taskTypes","taskTypesArr","prioritis","renderAssignes","ReactDOM","render","document","getElementById"],"mappings":"uOAyDeA,EAtDD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAKzB,OADAC,QAAQC,IAAIF,GAEV,yBAAKG,UAAU,kBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,gDACA,4BAAQC,QATI,WAClBL,GAAS,KAQH,MAEF,kBAACM,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,mCACA,uCACA,iCACA,0CACA,yCAGJ,+BACGR,GACCA,EAAKS,KAAI,SAACC,EAAMC,GAAS,IACfC,EAAgDF,EAAhDE,QAASC,EAAuCH,EAAvCG,IAAKC,EAAkCJ,EAAlCI,QAASC,EAAyBL,EAAzBK,WAAYC,EAAaN,EAAbM,SAErCC,EADO,IAAIC,KAAKJ,GAEnBK,mBAAmB,QAAS,CAC3BC,IAAK,UACLC,MAAO,QACPC,KAAM,YAEPC,QAAQ,KAAM,KAEjB,OADAtB,QAAQC,IAAIe,GAEV,wBAAIJ,IAAKF,GACP,4BAAKE,GACL,4BAAKD,GACL,4BACE,yBAAKY,IAAKR,EAAUb,UAAU,UAEhC,6BAAMY,GAAc,cACpB,4BAAKE,Y,wBCbVQ,G,MA7BI,WACjB,OACE,kBAACpB,EAAA,EAAD,KACE,4BACE,4BACE,yBACEmB,IAAI,sEACJrB,UAAU,UAEd,4BACE,yBACEqB,IAAI,mEACJrB,UAAU,UAEd,4BACE,yBACEqB,IAAI,qEACJrB,UAAU,UAEd,4BACE,yBACEqB,IAAI,kEACJrB,UAAU,cC8LPuB,MA/Mf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACK7B,EADL,OAEW4B,mBAAS,IAFpB,mBAEN3B,EAFM,KAEA6B,EAFA,OAGyBF,mBAAS,IAHlC,mBAGNG,EAHM,KAGSC,EAHT,OAIgBJ,mBAAS,CACpC,CACEK,MAAO,0DACPC,MAAO,OAET,CACED,MAAO,sCACPC,MAAO,QAET,CACED,MAAM,+DACNC,MAAO,iBAfE,mBAINC,EAJM,aAkBaP,mBAAS,CACjCQ,eAAgB,QAnBL,mBAkBNC,EAlBM,KAkBCC,EAlBD,KAkCPC,EAAiB,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACxBH,EAAS,CAAEF,mBAELM,EAHkB,+BAAAD,EAAA,MAGN,4BAAAA,EAAA,sEACKE,IAAMC,IAAN,8CACoBJ,IAFzB,OACVK,EADU,OAIhBb,EAAaa,EAAO5C,MAJJ,2CAHM,8DASlByC,IATkB,uBAUlB1C,GAAU6B,GAVQ,2CAAH,sDAavBiB,qBAAU,YACO,uCAAG,4BAAAL,EAAA,4DACJ,0DADI,SAEKE,IAAMC,IAAN,2CADT,4DADI,OAEVC,EAFU,OAGhBf,EAAQe,EAAO5C,MAHC,2CAAH,qDAKfyC,KACC,IACH,IACMK,EADcC,OAAOC,QAAQhD,GACNS,KAAI,SAAAC,GAC/B,MAAO,CAAEuC,KAAMvC,EAAK,GAAIwC,QAASxC,EAAK,OAiGhCyB,EAAmBC,EAAnBD,eAER,OACE,yBAAKhC,UAAU,OACZyB,GAAa,kBAAC,EAAD,CAAO7B,SAAUA,EAAUC,KAAM8B,IAC/C,kBAAC,IAAD,CACEE,MAAOG,EACPgB,SA3Ie,SAAAhB,GACnBE,EAAS,CAAEF,mBACI,uCAAG,4BAAAK,EAAA,sEACKE,IAAMC,IAAN,2CACiBR,EAAeH,QAFrC,OACVY,EADU,OAIhB3C,QAAQC,IAAI0C,GACZf,EAAQe,EAAO5C,MALC,2CAAH,oDAOfyC,IAmIIP,QAASA,IAEX,kBAAC7B,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,6BACA,wCACA,wCACA,wCACA,yCAEF,4BACE,4BACE,kBAACH,EAAA,EAAD,KACE,4BACE,wBAAI+C,MAAO,CAAEC,MAAO,QAApB,YACA,uCAIN,4BACE,kBAAC,EAAD,OAEF,4BACE,kBAAC,EAAD,OAEF,4BACE,kBAAC,EAAD,OAEF,4BACE,kBAAC,EAAD,SAIN,+BACGP,EAASQ,QACRR,EAASrC,KAAI,SAACC,EAAMC,GAClB,OA5IW,SAAC4C,EAAS5C,GAC/B,IAAM6C,EAAcT,OAAOC,QAAQO,EAAQL,SAC3C,OACE,wBAAIrC,IAAKF,GACP,4BACE,kBAACN,EAAA,EAAD,CAAO+C,MAAO,IACZ,4BACE,4BACE,kBAAC/C,EAAA,EAAD,KACE,+BACE,4BACE,wBACE+C,MAAO,CACLC,MAAO,QAERE,EAAQN,MAEX,wBAAIG,MAAO,CAAEK,WAAY,QACvB,kBAACpD,EAAA,EAAD,KACE,+BACE,4BACE,4BACE,yBACEF,UAAU,OACVqB,IAAI,wGAGV,4BACE,4BACE,yBACErB,UAAU,OACVqB,IAAI,wGAGV,4BACE,4BACE,yBACErB,UAAU,OACVqB,IAAI,uEAGV,4BACE,4BACE,yBACErB,UAAU,OACVqB,IAAI,kHAa7BgC,EAAYF,QACXE,EAAY/C,KAAI,SAACC,EAAMC,GACrB,IAAM+C,EAAYhD,EAAK,GACjBiD,EAAeZ,OAAOC,QAAQU,GACpC,OACE,4BACE,kBAACrD,EAAA,EAAD,KACE,+BACGsD,EAAalD,KAAI,SAAAC,GAChB,IAAMkD,EAAYb,OAAOC,QAAQtC,EAAK,IACtC,OACE,4BACGkD,EAAUnD,KAAI,SAACC,EAAMC,GACpB,IAAM4B,EAAM7B,EAAK,GAAL,IACZ,OACE,wBAAIG,IAAKF,GACND,EAAK,GAAL,QAAmB4C,QAClB,uBACEnD,UAAU,QACVC,QAAS,kBAAMkC,EAAkBC,KAChC7B,EAAK,GAAL,QAAmB4C,uBA8DnCO,CAAenD,EAAMC,UC7M1CmD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.00fcd85b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst Modal = ({ setModal, data }) => {\n  const handleClose = () => {\n    setModal(false);\n  };\n  console.log(data);\n  return (\n    <div className=\"modaLcontainer\">\n      <div className=\"modalContent\">\n        <div className=\"titleWrapper\">\n          <h1>SPECIFIED ISSUES</h1>\n          <button onClick={handleClose}>X</button>\n        </div>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <td>key</td>\n              <td>summary</td>\n              <td>P</td>\n              <td>resolution</td>\n              <td>Created</td>\n            </tr>\n          </thead>\n          <tbody>\n            {data &&\n              data.map((item, idx) => {\n                const { summary, key, created, resolution, priority } = item;\n                const date = new Date(created);\n                const formattedDate = date\n                  .toLocaleDateString(\"en-GB\", {\n                    day: \"numeric\",\n                    month: \"short\",\n                    year: \"numeric\",\n                  })\n                  .replace(/ /g, \"/\");\n                console.log(formattedDate);\n                return (\n                  <tr key={idx}>\n                    <td>{key}</td>\n                    <td>{summary}</td>\n                    <td>\n                      <img src={priority} className=\"icon\"></img>\n                    </td>\n                    <td>{!resolution && \"unresolved\"}</td>\n                    <td>{formattedDate}</td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { Table } from \"react-bootstrap\";\n\nimport React from \"react\";\n\nconst Priorities = () => {\n  return (\n    <Table>\n      <tr>\n        <td>\n          <img\n            src=\"https://test-fast.atlassian.net/images/icons/priorities/highest.svg\"\n            className=\"icon\"></img>\n        </td>\n        <td>\n          <img\n            src=\"https://test-fast.atlassian.net/images/icons/priorities/high.svg\"\n            className=\"icon\"></img>\n        </td>\n        <td>\n          <img\n            src=\"https://test-fast.atlassian.net/images/icons/priorities/medium.svg\"\n            className=\"icon\"></img>\n        </td>\n        <td>\n          <img\n            src=\"https://test-fast.atlassian.net/images/icons/priorities/low.svg\"\n            className=\"icon\"></img>\n        </td>\n      </tr>\n    </Table>\n  );\n};\n\nexport default Priorities;\n","import React, { useEffect, useState, Fragment, Children } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\n// import AsyncSelect from \"react-select/async\";\nimport \"./main.css\";\nimport Priorities from \"./ui/Priorities\";\n\nfunction App() {\n  const [showModal, setModal] = useState(false);\n  const [data, setData] = useState([]);\n  const [specifiedData, setSpecified] = useState([]);\n  const [options, setOtions] = useState([\n    {\n      value: \"issuetype+in+standardIssueTypes()+ORDER+BY+created+DESC\",\n      label: \"All\",\n    },\n    {\n      value: \"status+=+Done+order+by+created+DESC\",\n      label: \"Done\",\n    },\n    {\n      value: `status%20%3D%20\"In%20Progress\"%20order%20by%20created%20DESC`,\n      label: \"In Progress\",\n    },\n  ]);\n  const [state, setState] = useState({\n    selectedOption: null,\n  });\n\n  const handleChange = selectedOption => {\n    setState({ selectedOption });\n    const fetchData = async () => {\n      const result = await axios.get(\n        `http://localhost:5002/api/issues/${selectedOption.value}`,\n      );\n      console.log(result);\n      setData(result.data);\n    };\n    fetchData();\n  };\n\n  const handleNumberClick = async jql => {\n    setState({ selectedOption });\n    // console.log(jql);\n    const fetchData = async () => {\n      const result = await axios.get(\n        `http://localhost:5002/api/sepcified/${jql}`,\n      );\n      setSpecified(result.data);\n    };\n    await fetchData();\n    await setModal(!showModal);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const jql = \"issuetype+in+standardIssueTypes()+ORDER+BY+created+DESC\";\n      const result = await axios.get(`http://localhost:5002/api/issues/${jql}`);\n      setData(result.data);\n    };\n    fetchData();\n  }, []);\n  const dataEntries = Object.entries(data);\n  const assignes = dataEntries.map(item => {\n    return { name: item[0], content: item[1] };\n  });\n  const renderAssignes = (assigne, idx) => {\n    const statusItems = Object.entries(assigne.content);\n    return (\n      <tr key={idx}>\n        <td>\n          <Table style={{}}>\n            <tr>\n              <td>\n                <Table>\n                  <tbody>\n                    <tr>\n                      <td\n                        style={{\n                          width: \"80%\",\n                        }}>\n                        {assigne.name}\n                      </td>\n                      <td style={{ paddingTop: \"0px\" }}>\n                        <Table>\n                          <tbody>\n                            <tr>\n                              <td>\n                                <img\n                                  className=\"icon\"\n                                  src=\"https://test-fast.atlassian.net/secure/viewavatar?size=medium&avatarId=10303&avatarType=issuetype\"></img>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <img\n                                  className=\"icon\"\n                                  src=\"https://test-fast.atlassian.net/secure/viewavatar?size=medium&avatarId=10318&avatarType=issuetype\"></img>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <img\n                                  className=\"icon\"\n                                  src=\"https://test-fast.atlassian.net/images/icons/issuetypes/epic.svg\"></img>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <img\n                                  className=\"icon\"\n                                  src=\"https://test-fast.atlassian.net/secure/viewavatar?size=medium&avatarId=10315&avatarType=issuetype\"></img>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </Table>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </td>\n            </tr>\n          </Table>\n        </td>\n        {statusItems.length &&\n          statusItems.map((item, idx) => {\n            const taskTypes = item[1];\n            const taskTypesArr = Object.entries(taskTypes);\n            return (\n              <td>\n                <Table>\n                  <tbody>\n                    {taskTypesArr.map(item => {\n                      const prioritis = Object.entries(item[1]);\n                      return (\n                        <tr>\n                          {prioritis.map((item, idx) => {\n                            const jql = item[1][\"jql\"];\n                            return (\n                              <td key={idx}>\n                                {item[1][\"content\"].length && (\n                                  <p\n                                    className=\"bingo\"\n                                    onClick={() => handleNumberClick(jql)}>\n                                    {item[1][\"content\"].length}\n                                  </p>\n                                )}\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </td>\n            );\n          })}\n      </tr>\n    );\n  };\n  const { selectedOption } = state;\n\n  return (\n    <div className=\"App\">\n      {showModal && <Modal setModal={setModal} data={specifiedData} />}\n      <Select\n        value={selectedOption}\n        onChange={handleChange}\n        options={options}\n      />\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th></th>\n            <th>status 1</th>\n            <th>status 2</th>\n            <th>status 3</th>\n            <th>status 4</th>\n          </tr>\n          <tr>\n            <td>\n              <Table>\n                <tr>\n                  <td style={{ width: \"80%\" }}> assigne</td>\n                  <td>type</td>\n                </tr>\n              </Table>\n            </td>\n            <th>\n              <Priorities />\n            </th>\n            <th>\n              <Priorities />\n            </th>\n            <th>\n              <Priorities />\n            </th>\n            <th>\n              <Priorities />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {assignes.length &&\n            assignes.map((item, idx) => {\n              return renderAssignes(item, idx);\n            })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}